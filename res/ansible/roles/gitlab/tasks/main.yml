- name: Check if GitLab configuration file already exists.
  ansible.builtin.stat: path=/etc/gitlab/gitlab.rb
  register: gitlab_config_file

- name: Check if GitLab is already installed.
  ansible.builtin.stat: path=/usr/bin/gitlab-ctl
  register: gitlab_file

- name: Install GitLab dependencies.
  ansible.builtin.apt:
    name: "{{ gitlab_dependencies }}"
    update_cache: true
    state: present

- name: Download GitLab repository installation script.
  ansible.builtin.get_url:
    url: "{{ gitlab_repository_installation_script_url }}"
    dest: /tmp/gitlab_install_repository.sh
    mode: 0644
  when: not gitlab_file.stat.exists

- name: Install GitLab repository.
  ansible.builtin.command: bash /tmp/gitlab_install_repository.sh
  register: output
  when: not gitlab_file.stat.exists

- name: Install GitLab
  ansible.builtin.package:
    name: "{{ gitlab_edition }}"
    state: present
  when: not gitlab_file.stat.exists


- name: modify runner token
  ansible.builtin.lineinfile:
    path: /etc/gitlab/gitlab.rb
    line: "gitlab_rails['initial_shared_runners_registration_token'] = '{{ reg_runner_token }}'"

- name: modify root password
  ansible.builtin.lineinfile:
    path: /etc/gitlab/gitlab.rb
    line: "gitlab_rails['initial_root_password'] = '{{ gitlab_pass }}'"

# Start and configure GitLab. Sometimes the first run fails, but after that,
# restarts fix problems, so ignore failures on this run.
- name: Reconfigure GitLab (first run).
  ansible.builtin.command: >
    gitlab-ctl reconfigure
    creates=/var/opt/gitlab/bootstrapped
  failed_when: false
